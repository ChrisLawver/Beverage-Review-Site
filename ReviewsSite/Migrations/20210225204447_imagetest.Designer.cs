// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewsSite;

namespace ReviewsSite.Migrations
{
    [DbContext(typeof(BevContext))]
    [Migration("20210225204447_imagetest")]
    partial class imagetest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReviewsSite.Models.Bev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bevs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Soda",
                            Description = "Smooth caramel beverage.",
                            Image = "Images/coke.jpg",
                            Name = "Coke",
                            Review = " 10/10 Would reccomend."
                        },
                        new
                        {
                            Id = 2,
                            Category = "Soda",
                            Description = "Rough and tumble",
                            Image = "Images/Pepsipic.jpg",
                            Name = "Pepsi",
                            Review = "Disappointing."
                        });
                });

            modelBuilder.Entity("ReviewsSite.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BevId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BevId");

                    b.ToTable("ReviewList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BevId = 0,
                            Content = "Too carbonated.",
                            Rating = "5",
                            ReviewDate = new DateTime(2021, 2, 25, 15, 44, 46, 688, DateTimeKind.Local).AddTicks(3851),
                            ReviewerName = "Carlos"
                        },
                        new
                        {
                            Id = 2,
                            BevId = 0,
                            Content = "Offensive to the pallete",
                            Rating = "0",
                            ReviewDate = new DateTime(2021, 2, 25, 15, 44, 46, 691, DateTimeKind.Local).AddTicks(8255),
                            ReviewerName = "Davis"
                        });
                });

            modelBuilder.Entity("ReviewsSite.Models.Review", b =>
                {
                    b.HasOne("ReviewsSite.Models.Bev", "Bev")
                        .WithMany("Reviews")
                        .HasForeignKey("BevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bev");
                });

            modelBuilder.Entity("ReviewsSite.Models.Bev", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
